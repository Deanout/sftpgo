# Name of your application. Used to uniquely configure containers.
service: video

# Name of the container image.
image: deanin/sftpgo

# Deploy to these servers.
servers:
  web:
    - 142.93.194.86

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: busidevs.com

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: deanin

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  secret:
    - RAILS_MASTER_KEY
  clear:
    # Run the Solid Queue Supervisor inside the web server's Puma process to do jobs.
    # When you start using multiple servers, you should split out job processing to a dedicated machine.
    SOLID_QUEUE_IN_PUMA: true

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"

# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "video_storage:/rails/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  sftpgo:
    image: drakkan/sftpgo:latest
    host: 142.93.194.86
    options:
      publish:
        - "2022:2022" # SFTP/SCP/FTP(S) service port
        - "8080:8080" # Web admin UI and REST API port
    volumes:
      - sftpgo_data:/var/lib/sftpgo
      - sftpgo_logs:/var/log/sftpgo
      - "/var/lib/docker/volumes:/home/sftpgo/game_volumes"
      - "/mnt/wsl/docker-desktop-data/version-pack-data/community/docker/volumes:/home/sftpgo/wsl_volumes"
      - "demo_storage:/home/sftpgo/rails/storage"
    env:
      secret:
        - SFTPGO_DEFAULT_ADMIN_USERNAME
        - SFTPGO_DEFAULT_ADMIN_PASSWORD
      clear:
        SFTPGO_HTTPD__BINDINGS__0__PORT: 8080
        SFTPGO_HTTPD__BINDINGS__0__ADDRESS: 0.0.0.0
        SFTPGO_SFTPD__BINDINGS__0__PORT: 2022
        SFTPGO_SFTPD__BINDINGS__0__ADDRESS: 0.0.0.0
        SFTPGO_PROVIDER__DATA_PROVIDER__DRIVER: sqlite3
        SFTPGO_PROVIDER__DATA_PROVIDER__DB_NAME: /var/lib/sftpgo/sftpgo.db
        SFTPGO_DATA_PROVIDER__CREATE_DEFAULT_ADMIN: true
